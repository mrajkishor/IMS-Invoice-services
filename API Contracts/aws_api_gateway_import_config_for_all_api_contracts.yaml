openapi: 3.0.0
info:
  title: Invoice Application API
  description: API for managing users, shops, invoices, and history for an invoice application.
  version: 1.0.0
paths:
  /auth/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
  /auth/logout:
    post:
      summary: User logout
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Successful logout
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /auth/refresh:
    post:
      summary: Refresh JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
  /users:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                  username:
                    type: string
                  email:
                    type: string
  /users/{userId}:
    get:
      summary: Get user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                  username:
                    type: string
                  email:
                    type: string
    put:
      summary: Update user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                  username:
                    type: string
                  email:
                    type: string
    delete:
      summary: Delete user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /shops:
    post:
      summary: Create a new shop
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                shopName:
                  type: string
                ownerId:
                  type: string
                address:
                  type: string
      responses:
        '201':
          description: Shop created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  shopId:
                    type: string
                  shopName:
                    type: string
                  ownerId:
                    type: string
                  address:
                    type: string
  /shops/{shopId}:
    get:
      summary: Get shop by ID
      parameters:
        - name: shopId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Shop retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  shopId:
                    type: string
                  shopName:
                    type: string
                  ownerId:
                    type: string
                  address:
                    type: string
    put:
      summary: Update shop by ID
      parameters:
        - name: shopId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                shopName:
                  type: string
                address:
                  type: string
      responses:
        '200':
          description: Shop updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  shopId:
                    type: string
                  shopName:
                    type: string
                  ownerId:
                    type: string
                  address:
                    type: string
    delete:
      summary: Delete shop by ID
      parameters:
        - name: shopId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Shop deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /invoices:
    post:
      summary: Create a new invoice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                shopId:
                  type: string
                customerId:
                  type: string
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      itemId:
                        type: string
                      quantity:
                        type: number
                      price:
                        type: number
                totalAmount:
                  type: number
                date:
                  type: string
      responses:
        '201':
          description: Invoice created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoiceId:
                    type: string
                  shopId:
                    type: string
                  customerId:
                    type: string
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        itemId:
                          type: string
                        quantity:
                          type: number
                        price:
                          type: number
                  totalAmount:
                    type: number
                  date:
                    type: string
  /invoices/{invoiceId}:
    get:
      summary: Get invoice by ID
      parameters:
        - name: invoiceId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Invoice retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoiceId:
                    type: string
                  shopId:
                    type: string
                  customerId:
                    type: string
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        itemId:
                          type: string
                        quantity:
                          type: number
                        price:
                          type: number
                  totalAmount:
                    type: number
                  date:
                    type: string
    put:
      summary: Update invoice by ID
      parameters:
        - name: invoiceId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      itemId:
                        type: string
                      quantity:
                        type: number
                      price:
                        type: number
                totalAmount:
                  type: number
                date:
                  type: string
      responses:
        '200':
          description: Invoice updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoiceId:
                    type: string
                  shopId:
                    type: string
                  customerId:
                    type: string
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        itemId:
                          type: string
                        quantity:
                          type: number
                        price:
                          type: number
                  totalAmount:
                    type: number
                  date:
                    type: string
    delete:
      summary: Delete invoice by ID
      parameters:
        - name: invoiceId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Invoice deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /shops/{shopId}/history:
    get:
      summary: Get shop history by shop ID
      parameters:
        - name: shopId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Shop history retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  history:
                    type: array
                    items:
                      type: object
                      properties:
                        invoiceId:
                          type: string
                        date:
                          type: string
                        totalAmount:
                          type: number
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
